{"version":3,"sources":["hooks/useMoneda.js","hooks/useCriptomonedas.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","index.js"],"names":["Label","styled","label","Select","select","MensajeError","p","Error","mensaje","Boton","input","Formulario","setMoneda","setCriptomoneda","useState","listaCripto","setListaCripto","error","setError","stateInicial","monedas","escogerMoneda","setEscogerMoneda","onChange","e","target","value","map","moneda","codigo","nombre","useMoneda","SeleccionarMonedas","escogerCriptoMoneda","setEscogerCriptoMoneda","CoinInfo","Name","FullName","Id","useCriptomonedas","escogerCriptomoneda","SetCriptomoneda","useEffect","consultarApi","a","axios","get","resultado","data","Data","onSubmit","preventDefault","type","ResultadoDiv","div","Parrafo","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","criptomoneda","setResultado","cargando","setCargando","cotizarCriptomoneda","url","setTimeout","DISPLAY","componente","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGMA,EAAQC,IAAOC,MAAV,qMAULC,EAASF,IAAOG,OAAV,gJCVNJ,EAAQC,IAAOC,MAAV,qMAULC,EAASF,IAAOG,OAAV,gJCVNC,EAAeJ,IAAOK,EAAV,kOAULC,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,eAACH,EAAD,eAAgBG,MCPnBC,EAAQR,IAAOS,MAAV,yUAkBEC,EAAa,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACtC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAQA,EHbuB,SAAChB,EAAOiB,EAAcC,GAC7C,MAA0CN,mBAASK,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAqBA,MAAO,CAACD,EAnBmB,WACzB,OACE,eAAC,WAAD,WACE,cAACrB,EAAD,UAAQE,IACR,eAACC,EAAD,CACEoB,SAAU,SAACC,GAAD,OAAOF,EAAiBE,EAAEC,OAAOC,QAC3CA,MAAOL,EAFT,UAIE,wBAAQK,MAAM,GAAd,8BACCN,EAAQO,KAAI,SAACC,GAAD,OACX,wBAA4BF,MAAOE,EAAOC,OAA1C,SACGD,EAAOE,QADGF,EAAOC,kBASaP,GGTCS,CAC1C,kBACA,GARc,CACd,CAAEF,OAAQ,MAAOC,OAAQ,wBACzB,CAAED,OAAQ,MAAOC,OAAQ,iBACzB,CAAED,OAAQ,MAAOC,OAAQ,QACzB,CAAED,OAAQ,MAAOC,OAAQ,qBAE3B,mBAAOT,EAAP,KAAsBW,EAAtB,KAMA,EFnB8B,SAAC9B,EAAOiB,EAAcC,GACpD,MAAsDN,mBAASK,GAA/D,mBAAOc,EAAP,KAA4BC,EAA5B,KAqBA,MAAO,CAACD,EAnBkB,WACxB,OACE,eAAC,WAAD,WACE,cAAC,EAAD,UAAQ/B,IACR,eAAC,EAAD,CACEqB,SAAU,SAACC,GAAD,OAAOU,EAAuBV,EAAEC,OAAOC,QACjDA,MAAOO,EAFT,UAIE,wBAAQP,MAAM,GAAd,8BACCN,EAAQO,KAAI,SAACC,GAAD,OACX,wBAAiCF,MAAOE,EAAOO,SAASC,KAAxD,SACGR,EAAOO,SAASE,UADNT,EAAOO,SAASG,cASSJ,GEHDK,CAC7C,yBACA,GACAxB,GAHF,mBAAOyB,EAAP,KAA4BC,EAA5B,KAMAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,4BAAAC,EAAA,4DAEjB,0EAFiB,SAIKC,IAAMC,IAF5B,2EAFiB,OAIbC,EAJa,OAKnB/B,EAAe+B,EAAUC,KAAKC,MALX,2CAAH,qDAOlBN,MACC,IAeH,OACE,uBAAMO,SAde,SAAC1B,GACtBA,EAAE2B,iBAEoB,KAAlB9B,GAAgD,KAAxBmB,GAK5BtB,GAAS,GACTN,EAAUS,GACVR,EAAgB2B,IANdtB,GAAS,IAUX,UACGD,EAAQ,cAAC,EAAD,CAAOT,QAAQ,sCAAyC,KACjE,cAACwB,EAAD,IACA,cAACS,EAAD,IACA,cAAChC,EAAD,CAAO2C,KAAK,SAAS1B,MAAM,iBCzE3B2B,EAAepD,IAAOqD,IAAV,0FAKZC,EAAUtD,IAAOK,EAAV,uFAOPkD,EAASvD,IAAOK,EAAV,uFAOCmD,EAAa,SAAC,GAAmB,IAAjBV,EAAgB,EAAhBA,UAC3B,OAAsC,IAAlCW,OAAOC,KAAKZ,GAAWa,OAAqB,KAG9C,eAACP,EAAD,WACE,eAACG,EAAD,4BACgB,+BAAOT,EAAUc,QAAc,OAE/C,eAACN,EAAD,6CAC8B,+BAAOR,EAAUe,UAAgB,OAE/D,eAACP,EAAD,yCAC0B,+BAAOR,EAAUgB,SAAe,OAE1D,eAACR,EAAD,6CAC8B,+BAAOR,EAAUiB,kBAAwB,OAEvE,eAACT,EAAD,uCACwB,+BAAOR,EAAUkB,aAAmB,WCrCrDC,G,MAAU,WACrB,OACE,sBAAKC,MAAM,WAAX,UACE,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,sBCDXC,EAAanE,IAAOqD,IAAV,iMAWVe,EAASpE,IAAOqE,IAAV,qEAKNC,EAAUtE,IAAOuE,GAAV,6TAkBAC,EAAM,WACjB,MAA4B3D,mBAAS,IAArC,mBAAOc,EAAP,KAAehB,EAAf,KACA,EAAwCE,mBAAS,IAAjD,mBAAO4D,EAAP,KAAqB7D,EAArB,KACA,EAAkCC,mBAAS,IAA3C,mBAAOiC,EAAP,KAAkB4B,EAAlB,KACA,EAAgC7D,oBAAS,GAAzC,mBAAO8D,EAAP,KAAiBC,EAAjB,KAEAnC,qBAAU,WACR,IAAMoC,EAAmB,uCAAG,8BAAAlC,EAAA,yDACX,KAAXhB,EADsB,wDAGpBmD,EAHoB,sEAGiDL,EAHjD,kBAGuE9C,GAHvE,SAKFiB,IAAMC,IAAIiC,GALR,OAKpBhC,EALoB,OAO1B8B,GAAY,GAEZG,YAAW,WACTH,GAAY,GACZF,EAAa5B,EAAUC,KAAKiC,QAAQP,GAAc9C,MACjD,KAZuB,2CAAH,qDAezBkD,MACC,CAAClD,EAAQ8C,IAEZ,IAAMQ,EAAaN,EACjB,cAAC,EAAD,IAEA,cAAC,EAAD,CAAY7B,UAAWA,IAGzB,OACE,eAACqB,EAAD,WACE,8BACE,cAACC,EAAD,CAAQc,IAAK,0GAA2GC,IAAI,oBAE9H,gCACE,cAACb,EAAD,mCAEA,cAAC,EAAD,CAAY3D,UAAWA,EAAWC,gBAAiBA,IAClDqE,S,MC/ETG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef55b288.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nexport const useMoneda = (label, stateInicial, monedas) => {\n  const [escogerMoneda, setEscogerMoneda] = useState(stateInicial);\n\n  const SeleccionarMonedas = () => {\n    return (\n      <Fragment>\n        <Label>{label}</Label>\n        <Select\n          onChange={(e) => setEscogerMoneda(e.target.value)}\n          value={escogerMoneda}\n        >\n          <option value=\"\">-- Seleccione --</option>\n          {monedas.map((moneda) => (\n            <option key={moneda.codigo} value={moneda.codigo}>\n              {moneda.nombre}\n            </option>\n          ))}\n        </Select>\n      </Fragment>\n    );\n  };\n\n  return [escogerMoneda, SeleccionarMonedas, setEscogerMoneda];\n};\n","import React, { Fragment, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nexport const useCriptomonedas = (label, stateInicial, monedas) => {\n  const [escogerCriptoMoneda, setEscogerCriptoMoneda] = useState(stateInicial);\n\n  const SeleccionarCripto = () => {\n    return (\n      <Fragment>\n        <Label>{label}</Label>\n        <Select\n          onChange={(e) => setEscogerCriptoMoneda(e.target.value)}\n          value={escogerCriptoMoneda}\n        >\n          <option value=\"\">-- Seleccione --</option>\n          {monedas.map((moneda) => (\n            <option key={moneda.CoinInfo.Id} value={moneda.CoinInfo.Name}>\n              {moneda.CoinInfo.FullName}\n            </option>\n          ))}\n        </Select>\n      </Fragment>\n    );\n  };\n\n  return [escogerCriptoMoneda, SeleccionarCripto, setEscogerCriptoMoneda];\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MensajeError = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: \"Bebas Neue\", cursive;\n`;\nexport const Error = ({ mensaje }) => {\n  return <MensajeError> {mensaje}</MensajeError>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useMoneda } from \"../hooks/useMoneda\";\nimport { useCriptomonedas } from \"../hooks/useCriptomonedas\";\nimport axios from \"axios\";\nimport { Error } from \"./Error\";\n\nconst Boton = styled.input`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n  }\n`;\n\nexport const Formulario = ({ setMoneda, setCriptomoneda }) => {\n  const [listaCripto, setListaCripto] = useState([]);\n  const [error, setError] = useState(false);\n\n  const monedas = [\n    { codigo: \"USD\", nombre: \"Dolar Estadounidense\" },\n    { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\n    { codigo: \"EUR\", nombre: \"Euro\" },\n    { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\n  ];\n  const [escogerMoneda, SeleccionarMonedas] = useMoneda(\n    \"Elige tu moneda\",\n    \"\",\n    monedas\n  );\n\n  const [escogerCriptomoneda, SetCriptomoneda] = useCriptomonedas(\n    \"Elige tu Criptomonedas\",\n    \"\",\n    listaCripto\n  );\n\n  useEffect(() => {\n    const consultarApi = async () => {\n      const url =\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n\n      const resultado = await axios.get(url);\n      setListaCripto(resultado.data.Data);\n    };\n    consultarApi();\n  }, []);\n\n  const cotizarMonedas = (e) => {\n    e.preventDefault();\n\n    if (escogerMoneda === \"\" || escogerCriptomoneda === \"\") {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n    setMoneda(escogerMoneda);\n    setCriptomoneda(escogerCriptomoneda);\n  };\n\n  return (\n    <form onSubmit={cotizarMonedas}>\n      {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\n      <SeleccionarMonedas />\n      <SetCriptomoneda />\n      <Boton type=\"submit\" value=\"Calcular\" />\n    </form>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ResultadoDiv = styled.div`\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst Parrafo = styled.p`\n  font-size: 18px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Precio = styled.p`\n  font-size: 30px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const Cotizacion = ({ resultado }) => {\n  if (Object.keys(resultado).length === 0) return null;\n\n  return (\n    <ResultadoDiv>\n      <Precio>\n        El precio es: <span>{resultado.PRICE}</span>{\" \"}\n      </Precio>\n      <Parrafo>\n        El precio mas alto del d√≠a: <span>{resultado.HIGHDAY}</span>{\" \"}\n      </Parrafo>\n      <Parrafo>\n        El precio bajo del d√≠a: <span>{resultado.LOWDAY}</span>{\" \"}\n      </Parrafo>\n      <Parrafo>\n        VAriaci√≥n ultimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span>{\" \"}\n      </Parrafo>\n      <Parrafo>\n        Ultima Actualizaci√≥n: <span>{resultado.LASTUPDATE}</span>{\" \"}\n      </Parrafo>\n    </ResultadoDiv>\n  );\n};\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nexport const Spinner = () => {\n  return (\n    <div class=\"sk-chase\">\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\n//import imagen from \"./cryptomonedas.png\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Cotizacion } from \"./components/Cotizacion\";\nimport { Spinner } from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-size: 50px;\n  font-size: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nexport const App = () => {\n  const [moneda, setMoneda] = useState(\"\");\n  const [criptomoneda, setCriptomoneda] = useState(\"\");\n  const [resultado, setResultado] = useState({});\n  const [cargando, setCargando] = useState(false);\n\n  useEffect(() => {\n    const cotizarCriptomoneda = async () => {\n      if (moneda === \"\") return;\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      setCargando(true);\n\n      setTimeout(() => {\n        setCargando(false);\n        setResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 1000);\n    };\n\n    cotizarCriptomoneda();\n  }, [moneda, criptomoneda]);\n\n  const componente = cargando ? (\n    <Spinner />\n  ) : (\n    <Cotizacion resultado={resultado} />\n  );\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={\"https://res.cloudinary.com/dcxto1nnl/image/upload/v1642526621/imagenes-paginas/cryptomonedas_s1i5ix.png\"} alt=\"imagen cripto\" />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas</Heading>\n\n        <Formulario setMoneda={setMoneda} setCriptomoneda={setCriptomoneda} />\n        {componente}\n      </div>\n    </Contenedor>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}